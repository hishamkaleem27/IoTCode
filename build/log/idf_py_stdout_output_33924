[1/9] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\hisha\SiblingDevice\Software\IoTCode\build\bootloader\esp-idf\esptool_py && C:\Users\hisha\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/hisha/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/hisha/SiblingDevice/Software/IoTCode/build/bootloader/bootloader.bin"
Bootloader binary size 0x5540 bytes. 0x1ac0 bytes (24%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
In file included from C:/Users/hisha/SiblingDevice/Software/IoTCode/main/main.cpp:13:
C:/Users/hisha/SiblingDevice/Software/IoTCode/components/SPI/SPI_Conf.h:6:9: warning: "SPI_HOST" redefined
    6 | #define SPI_HOST SPI2_HOST
      |         ^~~~~~~~
In file included from C:/Users/hisha/esp/v5.4.1/esp-idf/components/esp_driver_spi/include/driver/spi_master.h:11,
                 from C:/Users/hisha/SiblingDevice/Software/IoTCode/components/SPI/SPI_Conf.h:3:
C:/Users/hisha/esp/v5.4.1/esp-idf/components/hal/include/hal/spi_types.h:95:9: note: this is the location of the previous definition
   95 | #define SPI_HOST    SPI1_HOST
      |         ^~~~~~~~
C:/Users/hisha/SiblingDevice/Software/IoTCode/main/main.cpp: In function 'void app_main()':
C:/Users/hisha/SiblingDevice/Software/IoTCode/main/main.cpp:50:5: warning: missing initializer for member 'esp_timer_create_args_t::arg' [-Wmissing-field-initializers]
   50 |     };
      |     ^
C:/Users/hisha/SiblingDevice/Software/IoTCode/main/main.cpp:50:5: warning: missing initializer for member 'esp_timer_create_args_t::dispatch_method' [-Wmissing-field-initializers]
C:/Users/hisha/SiblingDevice/Software/IoTCode/main/main.cpp:50:5: warning: missing initializer for member 'esp_timer_create_args_t::skip_unhandled_events' [-Wmissing-field-initializers]
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable IoTDeviceCode.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s2 image...
Merged 2 ELF sections
Successfully created esp32s2 image.
Generated C:/Users/hisha/SiblingDevice/Software/IoTCode/build/IoTDeviceCode.bin
[9/9] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\hisha\SiblingDevice\Software\IoTCode\build\esp-idf\esptool_py && C:\Users\hisha\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/hisha/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/hisha/SiblingDevice/Software/IoTCode/build/partition_table/partition-table.bin C:/Users/hisha/SiblingDevice/Software/IoTCode/build/IoTDeviceCode.bin"
IoTDeviceCode.bin binary size 0x89390 bytes. Smallest app partition is 0x100000 bytes. 0x76c70 bytes (46%) free.
