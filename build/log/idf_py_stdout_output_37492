[1/12] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\hisha\SiblingDevice\Software\IoTCode\build\bootloader\esp-idf\esptool_py && C:\Users\hisha\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/hisha/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/hisha/SiblingDevice/Software/IoTCode/build/bootloader/bootloader.bin"
Bootloader binary size 0x5540 bytes. 0x1ac0 bytes (24%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
[5/12] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/display.c.obj
[6/12] Linking C static library esp-idf\display\libdisplay.a
[7/12] Linking C static library esp-idf\main\libmain.a
[8/12] Generating ld/sections.ld
[9/12] Building C object CMakeFiles/IoTDeviceCode.elf.dir/project_elf_src_esp32s2.c.obj
[10/12] Linking CXX executable IoTDeviceCode.elf
[11/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s2 image...
Merged 2 ELF sections
Successfully created esp32s2 image.
Generated C:/Users/hisha/SiblingDevice/Software/IoTCode/build/IoTDeviceCode.bin
[12/12] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\hisha\SiblingDevice\Software\IoTCode\build\esp-idf\esptool_py && C:\Users\hisha\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/hisha/esp/v5.4.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/hisha/SiblingDevice/Software/IoTCode/build/partition_table/partition-table.bin C:/Users/hisha/SiblingDevice/Software/IoTCode/build/IoTDeviceCode.bin"
IoTDeviceCode.bin binary size 0x637b0 bytes. Smallest app partition is 0x100000 bytes. 0x9c850 bytes (61%) free.
